<?php

/**
 * This is the model base class for the table "voucher_history".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "VoucherHistory".
 *
 * Columns in table "voucher_history" available as properties of the model,
 * followed by relations of table "voucher_history" available as properties of the model.
 *
 * @property integer $id
 * @property integer $voucher_id
 * @property integer $action
 * @property string $action_date
 * @property string $deleted_at
 *
 * @property VoucherAction $action0
 * @property Voucher $voucher
 */
abstract class BaseVoucherHistory extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'voucher_history';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'VoucherHistory|VoucherHistories', $n);
	}

	public static function representingColumn() {
		return 'action_date';
	}

	public function rules() {
		return array(
			array('voucher_id, action', 'required'),
			array('voucher_id, action', 'numerical', 'integerOnly'=>true),
			array('deleted_at', 'safe'),
			array('deleted_at', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, voucher_id, action, action_date, deleted_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'action0' => array(self::BELONGS_TO, 'VoucherAction', 'action'),
			'voucher' => array(self::BELONGS_TO, 'Voucher', 'voucher_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'voucher_id' => null,
			'action' => null,
			'action_date' => Yii::t('app', 'Action Date'),
			'deleted_at' => Yii::t('app', 'Deleted At'),
			'action0' => null,
			'voucher' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('voucher_id', $this->voucher_id);
		$criteria->compare('action', $this->action);
		$criteria->compare('action_date', $this->action_date, true);
		$criteria->compare('deleted_at', $this->deleted_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}